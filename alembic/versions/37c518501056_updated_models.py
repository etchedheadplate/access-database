"""Updated models

Revision ID: 37c518501056
Revises: 2c65a86d60cf
Create Date: 2025-10-27 19:47:38.821661

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "37c518501056"
down_revision: str | Sequence[str] | None = "2c65a86d60cf"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "groups_permissions",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
        ),
        sa.PrimaryKeyConstraint("group_id", "permission_id"),
    )
    op.create_table(
        "permissions_resources",
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.Column("resource_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resources.id"],
        ),
        sa.PrimaryKeyConstraint("permission_id", "resource_id"),
    )
    op.drop_table("groups_accesses")
    op.drop_table("accesses_resources")
    op.drop_table("accesses")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accesses",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('accesses_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="accesses_pkey"),
        sa.UniqueConstraint(
            "name", name="accesses_name_key", postgresql_include=[], postgresql_nulls_not_distinct=False
        ),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "accesses_resources",
        sa.Column("access_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("resource_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["access_id"], ["accesses.id"], name=op.f("accesses_resources_access_id_fkey")),
        sa.ForeignKeyConstraint(["resource_id"], ["resources.id"], name=op.f("accesses_resources_resource_id_fkey")),
        sa.PrimaryKeyConstraint("access_id", "resource_id", name=op.f("accesses_resources_pkey")),
    )
    op.create_table(
        "groups_accesses",
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("access_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["access_id"], ["accesses.id"], name=op.f("groups_accesses_access_id_fkey")),
        sa.ForeignKeyConstraint(["group_id"], ["groups.id"], name=op.f("groups_accesses_group_id_fkey")),
        sa.PrimaryKeyConstraint("group_id", "access_id", name=op.f("groups_accesses_pkey")),
    )
    op.drop_table("permissions_resources")
    op.drop_table("groups_permissions")
    op.drop_table("permissions")
    # ### end Alembic commands ###
