"""renamed user_groups

Revision ID: 2c65a86d60cf
Revises: fb026cf4d074
Create Date: 2025-10-25 23:51:50.246280

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import UUID

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2c65a86d60cf"
down_revision: str | Sequence[str] | None = "fb026cf4d074"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_groups",
        sa.Column("user_id", UUID(as_uuid=True), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "group_id"),
    )
    op.drop_table("user_groups")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_groups",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["group_id"], ["groups.id"], name=op.f("user_groups_group_id_fkey")),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name=op.f("user_groups_user_id_fkey")),
        sa.PrimaryKeyConstraint("user_id", "group_id", name=op.f("user_groups_pkey")),
    )
    op.drop_table("users_groups")
    # ### end Alembic commands ###
